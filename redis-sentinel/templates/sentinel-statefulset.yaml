---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sentinel
spec:
  selector:
    matchLabels:
      app: sentinel
  serviceName: sentinel
  replicas: {{ .Values.sentinel.replicaCount }}
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      {{- with .Values.sentinel.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: sentinel
    spec:
      securityContext:
        {{- toYaml .Values.sentinel.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: init-sentinel
          image: "{{ .Values.sentinel.image.repository }}:{{ .Values.sentinel.image.tag }}"
          imagePullPolicy: {{ .Values.sentinel.image.pullPolicy }}
          command:
            - bash
            - "-c"
            - |
              set -ex
              HOSTNAME=$(hostname)
              #check sentinel for any existing master
              MASTER=$(timeout 3 redis-cli -h sentinel -p 26379 sentinel get-master-addr-by-name mymaster | sed -n '1p')
              #copy readonly config
              cp /mnt/config-map/sentinel.conf /etc/sentinel.conf
              if [[ -z "$MASTER" ]]; then
                echo "no existing master found, using default redis-0"
                sed -i "s/\$MASTER/redis-0/g" /etc/sentinel.conf
              else
                echo "found existing master $MASTER"
                sed -i "s/\$MASTER/$MASTER/g" /etc/sentinel.conf
              fi
              sed -i "s/\$HOSTNAME/$HOSTNAME/g" /etc/sentinel.conf
              cp /mnt/config-map/ping.sh /etc/ping.sh
          volumeMounts:
            - name: conf
              mountPath: /etc
              subPath: sentinel.conf
            - name: config
              mountPath: /mnt/config-map
      containers:
        - name: sentinel
          image: "{{ .Values.sentinel.image.repository }}:{{ .Values.sentinel.image.tag }}"
          imagePullPolicy: {{ .Values.sentinel.image.pullPolicy }}
          command:
            - redis-server
          args:
            - /etc/sentinel.conf
            - --sentinel
          ports:
            - containerPort: 26379
              name: sentinel-tcp
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 1
            exec:
              command:
                - sh
                - -c
                - /etc/ping.sh
          livenessProbe:
            initialDelaySeconds: 3
            exec:
              command:
                - sh
                - -c
                - /etc/ping.sh
          volumeMounts:
            - name: conf
              mountPath: /etc/
              subPath: sentinel.conf
          resources:
            {{- toYaml .Values.sentinel.resources | nindent 12 }}
      volumes:
        - name: conf
          emptyDir:
            sizeLimit: 100Mi
        - name: config
          configMap:
            name: sentinel
            defaultMode: 0777
        - name: sentinel-data
          emptyDir:
            sizeLimit: 500Mi
      {{- with .Values.sentinel.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sentinel.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sentinel.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
