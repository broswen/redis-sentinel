---
# Source: redis-sentinel/templates/redis-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis
data:
  replica.conf: |
    port 6379
    replica-announce-ip $HOST
    enable-debug-command yes
  ping.sh: |
    set -ex
    redis-cli ping
---
# Source: redis-sentinel/templates/sentinel-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sentinel
data:
  sentinel.conf: |
    sentinel resolve-hostnames yes
    sentinel announce-hostnames yes
    protected-mode no
    sentinel announce-ip $HOSTNAME
    sentinel announce-port 26379
    sentinel monitor mymaster $MASTER 6379 2
    sentinel down-after-milliseconds mymaster 30000
    sentinel failover-timeout mymaster 180000
    sentinel parallel-syncs mymaster 1
  ping.sh: |
    set -ex
    redis-cli -p 26379 ping
---
# Source: redis-sentinel/templates/redis-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 6379
      protocol: TCP
      targetPort: redis-tcp
      name: redis
  selector:
    app: redis
---
# Source: redis-sentinel/templates/redis-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-nodeport
  labels:
    app: redis
spec:
  type: NodePort
  ports:
    - nodePort: 30005
      port: 6379
      protocol: TCP
      targetPort: redis-tcp
      name: redis
  selector:
    app: redis
---
# Source: redis-sentinel/templates/redis-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-0
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
    - port: 6379
      protocol: TCP
      targetPort: redis-tcp
      name: redis
  selector:
    app: redis
    statefulset.kubernetes.io/pod-name: redis-0
---
# Source: redis-sentinel/templates/redis-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-1
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
    - port: 6379
      protocol: TCP
      targetPort: redis-tcp
      name: redis
  selector:
    app: redis
    statefulset.kubernetes.io/pod-name: redis-1
---
# Source: redis-sentinel/templates/redis-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-2
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
    - port: 6379
      protocol: TCP
      targetPort: redis-tcp
      name: redis
  selector:
    app: redis
    statefulset.kubernetes.io/pod-name: redis-2
---
# Source: redis-sentinel/templates/sentinel-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sentinel
  labels:
    app: sentinel
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 46379
      protocol: TCP
      targetPort: sentinel-tcp
      name: sentinel
  selector:
    app: sentinel
---
# Source: redis-sentinel/templates/sentinel-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sentinel-nodeport
  labels:
    app: sentinel
spec:
  type: NodePort
  ports:
    - nodePort: 30006
      port: 26379
      protocol: TCP
      targetPort: sentinel-tcp
      name: sentinel
  selector:
    app: sentinel
---
# Source: redis-sentinel/templates/sentinel-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sentinel-0
  labels:
    app: sentinel
spec:
  type: ClusterIP
  ports:
    - port: 26379
      protocol: TCP
      targetPort: sentinel-tcp
      name: sentinel
  selector:
    app: sentinel
    statefulset.kubernetes.io/pod-name: sentinel-0
---
# Source: redis-sentinel/templates/sentinel-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sentinel-1
  labels:
    app: sentinel
spec:
  type: ClusterIP
  ports:
    - port: 26379
      protocol: TCP
      targetPort: sentinel-tcp
      name: sentinel
  selector:
    app: sentinel
    statefulset.kubernetes.io/pod-name: sentinel-1
---
# Source: redis-sentinel/templates/sentinel-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sentinel-2
  labels:
    app: sentinel
spec:
  type: ClusterIP
  ports:
    - port: 26379
      protocol: TCP
      targetPort: sentinel-tcp
      name: sentinel
  selector:
    app: sentinel
    statefulset.kubernetes.io/pod-name: sentinel-2
---
# Source: redis-sentinel/templates/redis-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: redis
  replicas: 3
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: redis
    spec:
      securityContext:
        {}
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: init-redis
          image: "redis:7.0.9"
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - "-c"
            - |
              set -ex
              #get hostname to announce
              HOSTNAME=$(hostname)
              MASTER=""
              #check the role of every other redis pod
              for i in {0..2}; do
                #check each redis instance if it is the master, timeout after 3 seconds
                ROLE=$(timeout 3 redis-cli -h redis-$i --raw role | sed -n "1p")
                #if the redis pod has the role master, then set the master variable
                if [[ "$ROLE" = "master" ]]; then
                  MASTER=redis-$i
                  echo "found master $MASTER"
                  break
                fi
              done
              #copy readonly config template
              cp /mnt/config-map/replica.conf /etc/redis.conf
              #replace hostname in config
              sed -i "s/\$HOST/$HOSTNAME/g" /etc/redis.conf
              if [[ -z "$MASTER" ]]; then
                echo "current master was not found"
              else
                #if a master was found, insert replicaof in config
                echo "replicaof $MASTER 6379" > /etc/redis.conf
              fi
              cp /mnt/config-map/ping.sh /etc/ping.sh
          volumeMounts:
            - name: conf
              mountPath: /etc
              subPath: redis.conf
            - name: config
              mountPath: /mnt/config-map
      containers:
        - name: redis
          image: "redis:7.0.9"
          imagePullPolicy: IfNotPresent
          command:
            - redis-server
          args:
            - /etc/redis.conf
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          ports:
            - containerPort: 6379
              name: redis-tcp
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 1
            exec:
              command:
                - sh
                - -c
                - /etc/ping.sh
          livenessProbe:
            initialDelaySeconds: 3
            exec:
              command:
                - sh
                - -c
                - /etc/ping.sh
          volumeMounts:
            - name: redis-data
              mountPath: /data
              readOnly: false
            - name: conf
              mountPath: /etc/
              subPath: redis.conf
          resources:
            {}
      volumes:
        - name: conf
          emptyDir:
            sizeLimit: 100Mi
        - name: config
          configMap:
            name: redis
            defaultMode: 0777
        - name: redis-data
          emptyDir:
            sizeLimit: 500Mi
---
# Source: redis-sentinel/templates/sentinel-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sentinel
spec:
  selector:
    matchLabels:
      app: sentinel
  serviceName: sentinel
  replicas: 3
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: sentinel
    spec:
      securityContext:
        {}
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: init-sentinel
          image: "redis:7.0.9"
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - "-c"
            - |
              set -ex
              HOSTNAME=$(hostname)
              #check sentinel for any existing master
              MASTER=$(timeout 3 redis-cli -h sentinel -p 26379 sentinel get-master-addr-by-name mymaster | sed -n '1p')
              #copy readonly config
              cp /mnt/config-map/sentinel.conf /etc/sentinel.conf
              if [[ -z "$MASTER" ]]; then
                echo "no existing master found, using default redis-0"
                sed -i "s/\$MASTER/redis-0/g" /etc/sentinel.conf
              else
                echo "found existing master $MASTER"
                sed -i "s/\$MASTER/$MASTER/g" /etc/sentinel.conf
              fi
              sed -i "s/\$HOSTNAME/$HOSTNAME/g" /etc/sentinel.conf
              cp /mnt/config-map/ping.sh /etc/ping.sh
          volumeMounts:
            - name: conf
              mountPath: /etc
              subPath: sentinel.conf
            - name: config
              mountPath: /mnt/config-map
      containers:
        - name: sentinel
          image: "redis:7.0.9"
          imagePullPolicy: IfNotPresent
          command:
            - redis-server
          args:
            - /etc/sentinel.conf
            - --sentinel
          ports:
            - containerPort: 26379
              name: sentinel-tcp
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 1
            exec:
              command:
                - sh
                - -c
                - /etc/ping.sh
          livenessProbe:
            initialDelaySeconds: 3
            exec:
              command:
                - sh
                - -c
                - /etc/ping.sh
          volumeMounts:
            - name: conf
              mountPath: /etc/
              subPath: sentinel.conf
          resources:
            {}
      volumes:
        - name: conf
          emptyDir:
            sizeLimit: 100Mi
        - name: config
          configMap:
            name: sentinel
            defaultMode: 0777
        - name: sentinel-data
          emptyDir:
            sizeLimit: 500Mi
